#include <stdio.h>   
 
// Function to perform bubble sort
void bubble_sort(int arr[], int n)  
{   
    int i, j, temp;
    int swapped;
 
    // Traverse through all array elements
    for (i = 0; i < n - 1; i++)  
    {   
        swapped = 0; // To check if any swap happened during this pass
        
        // Last i elements are already in place
        for (j = 0; j < n - i - 1; j++)  
        {   
            // Compare adjacent elements
            if (arr[j] > arr[j + 1])  
            {   
                // Swap if elements are in wrong order
                temp = arr[j];   
                arr[j] = arr[j + 1];   
                arr[j + 1] = temp;   
                swapped = 1; // Indicate that a swap happened
            }   
        }   
 
        // If no two elements were swapped by inner loop, then break
        if (swapped == 0)  
            break;   
    }   
}   
 
int main()  
{   
    int arr[] = {64, 34, 25, 12, 22, 11, 90};   
    int n = sizeof(arr) / sizeof(arr[0]);   
    
    // Call bubble_sort function
    bubble_sort(arr, n);   
    
    // Print sorted array
    printf("Sorted array: ");   
    for (int i = 0; i < n; i++)  
    {   
        printf("%d ", arr[i]);   
    }   
    
    printf("\n");   
    return 0;   
}